{"version":3,"sources":["identiconDirective.js","md5.js"],"names":["angular","module","directive","restrict","replace","scope","username","size","template","controller","$scope","md5","$watchGroup","newVal","data","Identicon","createHash","toString","factory","str","xl","k","AA","BB","CC","DD","a","b","c","d","rotateLeft","lValue","iShiftBits","addUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","_F","x","y","z","_G","_H","_I","_FF","s","ac","_GG","_HH","_II","convertToWordArray","lWordCount","lMessageLength","length","lNumberOfWords_temp1","lNumberOfWords_temp2","lNumberOfWords","lWordArray","Array","lBytePosition","lByteCount","charCodeAt","wordToHex","lByte","lCount","wordToHexValue","wordToHexValue_temp","substr","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","temp","toLowerCase"],"mappings":"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","file":"angular-identicon.min.js","sourcesContent":["/**\n * @ngdoc directive\n * @name contactIcon\n *\n * @description\n * _Please update the description and restriction._\n *\n * @restrict A\n * */\nangular.module('ui.identicon', [])\n    .directive('identicon', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                username: '=',\n                size: '='\n            },\n            template: '<img class=\"identicon\" width={{size}} height={{size}} ng-src=\"data:image/png;base64,{{data}}\">',\n            controller: [\"$scope\", \"md5\", function ($scope, md5) {\n                $scope.size = (typeof($scope.size) !== 'undefined' ? $scope.size : 24);\n\n                $scope.$watchGroup(['username', 'size'], function (newVal) {\n                    $scope.data = new Identicon(md5.createHash($scope.username || ''), $scope.size).toString();\n                });\n            }]\n        };\n    });\n","'use strict';\n// copied and embedded from https://github.com/gdi2290/angular-md5/blob/master/lib/services/md5.js\nangular.module('ui.identicon')\n    .factory('md5', [function() {\n\n        var md5 = {\n            createHash: function(str) {\n\n                var xl;\n\n                var rotateLeft = function (lValue, iShiftBits) {\n                    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n                };\n\n                var addUnsigned = function (lX, lY) {\n                    var lX4, lY4, lX8, lY8, lResult;\n                    lX8 = (lX & 0x80000000);\n                    lY8 = (lY & 0x80000000);\n                    lX4 = (lX & 0x40000000);\n                    lY4 = (lY & 0x40000000);\n                    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n                    if (lX4 & lY4) {\n                        return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n                    }\n                    if (lX4 | lY4) {\n                        if (lResult & 0x40000000) {\n                            return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n                        } else {\n                            return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n                        }\n                    } else {\n                        return (lResult ^ lX8 ^ lY8);\n                    }\n                };\n\n                var _F = function (x, y, z) {\n                    return (x & y) | ((~x) & z);\n                };\n                var _G = function (x, y, z) {\n                    return (x & z) | (y & (~z));\n                };\n                var _H = function (x, y, z) {\n                    return (x ^ y ^ z);\n                };\n                var _I = function (x, y, z) {\n                    return (y ^ (x | (~z)));\n                };\n\n                var _FF = function (a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n\n                var _GG = function (a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n\n                var _HH = function (a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n\n                var _II = function (a, b, c, d, x, s, ac) {\n                    a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\n                    return addUnsigned(rotateLeft(a, s), b);\n                };\n\n                var convertToWordArray = function (str) {\n                    var lWordCount;\n                    var lMessageLength = str.length;\n                    var lNumberOfWords_temp1 = lMessageLength + 8;\n                    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n                    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n                    var lWordArray = new Array(lNumberOfWords - 1);\n                    var lBytePosition = 0;\n                    var lByteCount = 0;\n                    while (lByteCount < lMessageLength) {\n                        lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n                        lBytePosition = (lByteCount % 4) * 8;\n                        lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));\n                        lByteCount++;\n                    }\n                    lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n                    lBytePosition = (lByteCount % 4) * 8;\n                    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n                    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n                    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n                    return lWordArray;\n                };\n\n                var wordToHex = function (lValue) {\n                    var wordToHexValue = '',\n                        wordToHexValue_temp = '',\n                        lByte, lCount;\n                    for (lCount = 0; lCount <= 3; lCount++) {\n                        lByte = (lValue >>> (lCount * 8)) & 255;\n                        wordToHexValue_temp = '0' + lByte.toString(16);\n                        wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);\n                    }\n                    return wordToHexValue;\n                };\n\n                var x = [],\n                    k, AA, BB, CC, DD, a, b, c, d, S11 = 7,\n                    S12 = 12,\n                    S13 = 17,\n                    S14 = 22,\n                    S21 = 5,\n                    S22 = 9,\n                    S23 = 14,\n                    S24 = 20,\n                    S31 = 4,\n                    S32 = 11,\n                    S33 = 16,\n                    S34 = 23,\n                    S41 = 6,\n                    S42 = 10,\n                    S43 = 15,\n                    S44 = 21;\n\n                //str = this.utf8_encode(str);\n                x = convertToWordArray(str);\n                a = 0x67452301;\n                b = 0xEFCDAB89;\n                c = 0x98BADCFE;\n                d = 0x10325476;\n\n                xl = x.length;\n                for (k = 0; k < xl; k += 16) {\n                    AA = a;\n                    BB = b;\n                    CC = c;\n                    DD = d;\n                    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n                    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n                    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n                    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n                    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n                    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n                    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n                    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n                    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n                    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n                    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n                    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n                    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n                    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n                    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n                    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n                    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n                    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n                    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n                    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n                    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n                    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n                    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n                    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n                    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n                    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n                    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n                    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n                    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n                    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n                    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n                    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n                    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n                    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n                    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n                    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n                    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n                    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n                    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n                    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n                    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n                    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n                    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n                    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n                    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n                    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n                    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n                    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n                    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n                    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n                    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n                    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n                    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n                    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n                    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n                    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n                    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n                    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n                    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n                    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n                    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n                    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n                    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n                    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n                    a = addUnsigned(a, AA);\n                    b = addUnsigned(b, BB);\n                    c = addUnsigned(c, CC);\n                    d = addUnsigned(d, DD);\n                }\n\n                var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\n\n                return temp.toLowerCase();\n            }\n\n        };\n\n        return md5;\n\n    }]);"],"sourceRoot":"/source/"}